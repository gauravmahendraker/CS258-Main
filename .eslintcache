[{"/Users/abhinav/Desktop/CS258-Main/src/index.js":"1","/Users/abhinav/Desktop/CS258-Main/src/App.js":"2","/Users/abhinav/Desktop/CS258-Main/src/FilesViewer.js":"3","/Users/abhinav/Desktop/CS258-Main/src/ThreeImagesPage.js":"4","/Users/abhinav/Desktop/CS258-Main/src/TwoImagesPage.js":"5","/Users/abhinav/Desktop/CS258-Main/src/Home.js":"6","/Users/abhinav/Desktop/CS258-Main/src/FourImagesPage.js":"7","/Users/abhinav/Desktop/CS258-Main/src/Icons.js":"8","/Users/abhinav/Desktop/CS258-Main/src/components/FourImg.js":"9","/Users/abhinav/Desktop/CS258-Main/src/components/ThreeImg.js":"10","/Users/abhinav/Desktop/CS258-Main/src/components/FolderName.js":"11","/Users/abhinav/Desktop/CS258-Main/src/components/Navbar.js":"12","/Users/abhinav/Desktop/CS258-Main/src/components/TwoImg.js":"13","/Users/abhinav/Desktop/CS258-Main/src/components/Card.js":"14","/Users/abhinav/Desktop/CS258-Main/src/components/ModalComp.js":"15","/Users/abhinav/Desktop/CS258-Main/src/components/MetricsName.js":"16"},{"size":215,"mtime":1682009782451,"results":"17","hashOfConfig":"18"},{"size":1251,"mtime":1682096865453,"results":"19","hashOfConfig":"18"},{"size":880,"mtime":1682070126758,"results":"20","hashOfConfig":"18"},{"size":3924,"mtime":1682096865455,"results":"21","hashOfConfig":"18"},{"size":4201,"mtime":1682096865455,"results":"22","hashOfConfig":"18"},{"size":3444,"mtime":1682108526707,"results":"23","hashOfConfig":"18"},{"size":4351,"mtime":1682096865453,"results":"24","hashOfConfig":"18"},{"size":1242,"mtime":1682009782450,"results":"25","hashOfConfig":"18"},{"size":409,"mtime":1682009782450,"results":"26","hashOfConfig":"18"},{"size":353,"mtime":1682009782450,"results":"27","hashOfConfig":"18"},{"size":5080,"mtime":1682108709829,"results":"28","hashOfConfig":"18"},{"size":2022,"mtime":1682096865456,"results":"29","hashOfConfig":"18"},{"size":303,"mtime":1682072391563,"results":"30","hashOfConfig":"18"},{"size":2072,"mtime":1682091606769,"results":"31","hashOfConfig":"18"},{"size":0,"mtime":1682009782450,"results":"32","hashOfConfig":"18"},{"size":3587,"mtime":1682070126761,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1aawvjw",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},"/Users/abhinav/Desktop/CS258-Main/src/index.js",[],["74","75"],"/Users/abhinav/Desktop/CS258-Main/src/App.js",["76","77","78"],"import { useState, useMemo, createContext } from 'react'\nimport { FilesViewer } from './FilesViewer'\nimport { MemoryRouter as Router, Routes, Route } from 'react-router-dom'\nimport TwoImagesPage from './TwoImagesPage'\nimport ThreeImagesPage from './ThreeImagesPage'\nimport FourImagesPage from './FourImagesPage'\nimport Home from './Home'\nexport const ThemeContext = createContext()\nconst { app } = window.require('@electron/remote')\n\nfunction App() {\n  const [paths, setPaths] = useState({\n    path21: '/Users',\n    path22: '/Users',\n    path31: '/Users',\n    path32: '/Users',\n    path33: '/Users',\n    path41: '/Users',\n    path42: '/Users',\n    path43: '/Users',\n    path44: '/Users',\n    metrics: '',\n    mode: \"Dark\"\n  })\n  return (\n    <>\n      <ThemeContext.Provider\n        value={{\n          paths,\n          setPaths\n        }}\n      >\n        <Router>\n          <Routes>\n            <Route path=\"/\" element={<Home />}></Route>\n            <Route path=\"/twoimages\" element={<TwoImagesPage />} />\n            <Route path=\"/threeimages\" element={<ThreeImagesPage />} />\n            <Route path=\"/fourimages\" element={<FourImagesPage />} />\n          </Routes>\n        </Router>\n      </ThemeContext.Provider>\n    </>\n  )\n}\n\nexport default App\n","/Users/abhinav/Desktop/CS258-Main/src/FilesViewer.js",[],"/Users/abhinav/Desktop/CS258-Main/src/ThreeImagesPage.js",["79","80","81","82","83","84","85"],"import React, { useContext, useState } from 'react'\nimport Navbar from './components/Navbar'\nimport FolderName from './components/FolderName'\nimport ThreeImg from './components/ThreeImg'\nimport MetricsName from './components/MetricsName'\nimport Papa from \"papaparse\";\nimport { spawn } from 'child_process'\nimport { ThemeContext } from './App'\nconst fs = window.require('fs')\nconst pathModule = window.require('path')\nconst background = {\n    Dark: \"bg-gray-900 text-white\",\n    Light: \"bg-white text-gray-900\"\n}\n\nfunction ThreeImagesPage() {\n  const { paths, setPaths } = useContext(ThemeContext)\n  const [images, setImages] = useState([])\n  var mp = new Map()\n  const clickHandler = () => {\n    fs.readdirSync(paths['path31']).map(file => {\n      const stats = fs.statSync(pathModule.join(paths['path31'], file))\n      if (!stats.isDirectory()) {\n        if (mp.has(file)) mp.set(file, mp.get(file) + 1)\n        else mp.set(file, 1)\n      }\n    })\n    fs.readdirSync(paths['path32']).map(file => {\n      const stats = fs.statSync(pathModule.join(paths['path32'], file))\n      if (!stats.isDirectory()) {\n        if (mp.has(file)) mp.set(file, mp.get(file) + 1)\n        else mp.set(file, 1)\n      }\n    })\n    fs.readdirSync(paths['path33']).map(file => {\n      const stats = fs.statSync(pathModule.join(paths['path33'], file))\n      if (!stats.isDirectory()) {\n        if (mp.has(file)) mp.set(file, mp.get(file) + 1)\n        else mp.set(file, 1)\n      }\n    })\n    let newImages = []\n    if(paths[\"metrics\"]!=''){\n      fs.readFile(paths[\"metrics\"], 'utf8', function (err, data) {\n          if (err) {\n              throw err;\n          }\n          Papa.parse(data, {\n          step: function (row) {\n            if(row.data==\"\"){\n              setImages(newImages)\n              return\n            }\n            newImages.push([\n              pathModule.join(paths['path31'], row.data[0]),\n              pathModule.join(paths['path32'], row.data[1]),\n              pathModule.join(paths['path33'], row.data[2])\n            ])\n          }\n        });\n      });\n    }else{\n      for (let [key, value] of mp) {\n        if (value === 3) {\n          newImages.push([\n            pathModule.join(paths['path31'], key),\n            pathModule.join(paths['path32'], key),\n            pathModule.join(paths['path33'], key)\n          ])\n        }\n      }\n      setImages(newImages)\n    }\n  }\n  return ( \n      <div className={`bg-gray-900 ${background[paths[\"mode\"]]}`}>\n    <div className={`sm:px-16 px-6 bg-gray-900 ${background[paths[\"mode\"]]}`}>\n        <Navbar />\n      </div>\n    <div className=\"h-[100%] text-center\">\n      <div className={`sticky top-0 bg-gray-900 ${background[paths[\"mode\"]]}`}>\n      <div className=\"grid grid-cols-3 gap-2 m-2 w-100 mb-5\">\n        <FolderName folder=\"path31\"></FolderName>\n        <FolderName folder=\"path32\"></FolderName>\n        <FolderName folder=\"path33\"></FolderName>\n      </div>\n      <div className=\"grid grid-cols-2 gap-2 m-2 w-100 mb-5\">\n          <div className=\"w-100 flex items-center pb-1 justify-center\">\n            <button\n              onClick={clickHandler}\n              class=\"block text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-emerald-500 dark:text-white dark:border-gray-300 dark:hover:bg-emerald-700 border-2  dark:focus:ring-gray-700\"\n              type=\"button\"\n            >\n              Search for Images\n            </button>\n          </div>\n          <div className=\"w-100 flex items-center pb-1 justify-center\">\n            <MetricsName folder=\"metrics\"></MetricsName>\n          </div>\n        </div>\n      </div>\n      <div className=\"overflow-y-scroll\">\n        {images.map(arr => {\n          return <ThreeImg images={arr}></ThreeImg>\n        })}\n      </div>\n    </div>\n    </div>\n  )\n}\n\nexport default ThreeImagesPage\n","/Users/abhinav/Desktop/CS258-Main/src/TwoImagesPage.js",["86","87","88","89","90","91","92"],"import React, { useContext, useState } from 'react'\nimport Navbar from './components/Navbar'\nimport FolderName from './components/FolderName'\nimport MetricsName from './components/MetricsName'\nimport Papa from 'papaparse'\nimport TwoImg from './components/TwoImg'\nimport { spawn } from 'child_process'\nimport { ThemeContext } from './App'\nconst fs = window.require('fs')\nconst pathModule = window.require('path')\n\nconst background = {\n  Dark: \"bg-gray-900 text-white\",\n  Light: \"bg-white text-gray-900\"\n}\n\nfunction TwoImagesPage() {\n  const { paths, setPaths } = useContext(ThemeContext)\n  const [images, setImages] = useState([])\n  const acceptedImageTypes = ['gif', 'jpeg', 'png', 'jpg', 'svg']\n  var mp = new Map()\n  const clickHandler = () => {\n    fs.readdirSync(paths['path21']).map(file => {\n      const stats = fs.statSync(pathModule.join(paths['path21'], file))\n      const arr = file.split('.').pop()\n      if (!stats.isDirectory() && acceptedImageTypes.includes(arr)) {\n        if (mp.has(file)) mp.set(file, mp.get(file) + 1)\n        else mp.set(file, 1)\n      }\n    })\n    fs.readdirSync(paths['path22']).map(file => {\n      const stats = fs.statSync(pathModule.join(paths['path22'], file))\n      const file1 = new File(\n        [pathModule.join(paths['path22'], file)],\n        pathModule.join(paths['path22'], file)\n      )\n      const reader = new FileReader()\n      console.log(file1)\n      const arr = file.split('.').pop()\n      if (!stats.isDirectory() && acceptedImageTypes.includes(arr)) {\n        if (mp.has(file)) mp.set(file, mp.get(file) + 1)\n        else mp.set(file, 1)\n      }\n    })\n    let newImages = []\n    if (paths['metrics'] != '') {\n      fs.readFile(paths['metrics'], 'utf8', function (err, data) {\n        if (err) {\n          throw err\n        }\n        Papa.parse(data, {\n          step: function (row) {\n            if (row.data == '') {\n              setImages(newImages)\n              return\n            }\n            newImages.push([\n              pathModule.join(paths['path21'], row.data[0]),\n              pathModule.join(paths['path22'], row.data[1])\n            ])\n          }\n        })\n      })\n    } else {\n      for (let [key, value] of mp) {\n        if (value === 2) {\n          newImages.push([\n            pathModule.join(paths['path21'], key),\n            pathModule.join(paths['path22'], key)\n          ])\n        }\n      }\n      setImages(newImages)\n    }\n  }\n\n  return (\n    <>\n      <div className=\"max-h-[100%] overflow-hidden\">\n        <div className={`bg-gray-900 inline-block w-full ${background[paths[\"mode\"]]}`}>\n          <div className=\"sm:px-16 px-6\">\n            <Navbar />\n          </div>\n          <div className={`bg-gray-900 w-full ${background[paths[\"mode\"]]}`}>\n            <div className={`bg-gray-900 w-full ${background[paths[\"mode\"]]}`}>\n              <div className=\"sticky top-0 grid grid-cols-2 gap-2 m-2 w-100 mb-5\">\n                <FolderName folder=\"path21\"></FolderName>\n                <FolderName folder=\"path22\"></FolderName>\n              </div>\n              <div className=\"grid grid-cols-2 gap-2 m-2 w-100 mb-5\">\n                <div className=\"w-100 flex items-center pb-1 justify-center\">\n                  <button\n                    onClick={clickHandler}\n                    class=\"block text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-emerald-500 dark:text-white dark:border-gray-300 dark:hover:bg-emerald-700 border-2  dark:focus:ring-gray-700\"\n                    type=\"button\"\n                  >\n                    Search for Images\n                  </button>\n                </div>\n                <div className=\"w-100 flex items-center pb-1 justify-center\">\n                  <MetricsName folder=\"metrics\"></MetricsName>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"scrollable overflow-y-scroll bg-gray-900\">\n            {images.map(arr => {\n              return <TwoImg images={arr}></TwoImg>\n            })}\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default TwoImagesPage\n","/Users/abhinav/Desktop/CS258-Main/src/Home.js",["93","94","95","96"],"/Users/abhinav/Desktop/CS258-Main/src/FourImagesPage.js",["97","98","99","100","101","102","103","104"],"import React, { useContext, useState } from 'react'\nimport Navbar from './components/Navbar'\nimport FolderName from './components/FolderName'\nimport FourImg from './components/FourImg'\nimport MetricsName from './components/MetricsName'\nimport Papa from \"papaparse\";\nimport { spawn } from 'child_process'\nimport { ThemeContext } from './App'\nconst fs = window.require('fs')\nconst pathModule = window.require('path')\nconst background = {\n    Dark: \"bg-gray-900 text-white\",\n    Light: \"bg-white text-gray-900\"\n}\n\nfunction ThreeImagesPage() {\n  const { paths, setPaths } = useContext(ThemeContext)\n  const [images, setImages] = useState([])\n  var mp = new Map()\n  const clickHandler = () => {\n    fs.readdirSync(paths['path41']).map(file => {\n      const stats = fs.statSync(pathModule.join(paths['path41'], file))\n      if (!stats.isDirectory()) {\n        if (mp.has(file)) mp.set(file, mp.get(file) + 1)\n        else mp.set(file, 1)\n      }\n    })\n    fs.readdirSync(paths['path42']).map(file => {\n      const stats = fs.statSync(pathModule.join(paths['path42'], file))\n      if (!stats.isDirectory()) {\n        if (mp.has(file)) mp.set(file, mp.get(file) + 1)\n        else mp.set(file, 1)\n      }\n    })\n    fs.readdirSync(paths['path43']).map(file => {\n      const stats = fs.statSync(pathModule.join(paths['path43'], file))\n      if (!stats.isDirectory()) {\n        if (mp.has(file)) mp.set(file, mp.get(file) + 1)\n        else mp.set(file, 1)\n      }\n    })\n    fs.readdirSync(paths['path44']).map(file => {\n        const stats = fs.statSync(pathModule.join(paths['path44'], file))\n        if (!stats.isDirectory()) {\n          if (mp.has(file)) mp.set(file, mp.get(file) + 1)\n          else mp.set(file, 1)\n        }\n      })\n    let newImages = []\n    if(paths[\"metrics\"]!=''){\n      fs.readFile(paths[\"metrics\"], 'utf8', function (err, data) {\n          if (err) {\n              throw err;\n          }\n          Papa.parse(data, {\n          step: function (row) {\n            if(row.data==\"\"){\n              setImages(newImages)\n              return\n            }\n            newImages.push([\n              pathModule.join(paths['path41'], row.data[0]),\n              pathModule.join(paths['path42'], row.data[1]),\n              pathModule.join(paths['path43'], row.data[2]),\n              pathModule.join(paths['path44'], row.data[3])\n            ])\n          }\n        });\n      });\n    }else{\n      for (let [key, value] of mp) {\n        if (value === 4) {\n          newImages.push([\n            pathModule.join(paths['path41'], key),\n            pathModule.join(paths['path42'], key),\n            pathModule.join(paths['path43'], key),\n            pathModule.join(paths['path44'], key)\n          ])\n        }\n      }\n      setImages(newImages)\n    }\n  }\n  return ( \n      <div className={`bg-gray-900 ${background[paths[\"mode\"]]}`}>\n    <div className={`sm:px-16 px-6 bg-gray-900 ${background[paths[\"mode\"]]}`}>\n        <Navbar />\n      </div>\n    <div className=\"h-[100%] text-center\">\n      <div className={`sticky top-0 bg-gray-900 ${background[paths[\"mode\"]]}`}>\n      <div className=\"grid grid-cols-2 gap-2 m-2 w-100 mb-5\">\n        <FolderName folder=\"path41\"></FolderName>\n        <FolderName folder=\"path42\"></FolderName>\n        <FolderName folder=\"path43\"></FolderName>\n        <FolderName folder=\"path44\"></FolderName>\n      </div>\n      <div className=\"grid grid-cols-2 gap-2 m-2 w-100 mb-5\">\n          <div className=\"w-100 flex items-center pb-1 justify-center\">\n            <button\n              onClick={clickHandler}\n              class=\"block text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-emerald-500 dark:text-white dark:border-gray-300 dark:hover:bg-emerald-700 border-2  dark:focus:ring-gray-700\"\n              type=\"button\"\n            >\n              Search for Images\n            </button>\n          </div>\n          <div className=\"w-100 flex items-center pb-1 justify-center\">\n            <MetricsName folder=\"metrics\"></MetricsName>\n          </div>\n        </div>\n      </div>\n      <div className=\"overflow-y-scroll\">\n        {images.map(arr => {\n          return <FourImg images={arr}></FourImg>\n        })}\n      </div>\n    </div>\n    </div>\n  )\n}\n\nexport default ThreeImagesPage\n","/Users/abhinav/Desktop/CS258-Main/src/Icons.js",[],"/Users/abhinav/Desktop/CS258-Main/src/components/FourImg.js",[],"/Users/abhinav/Desktop/CS258-Main/src/components/ThreeImg.js",[],"/Users/abhinav/Desktop/CS258-Main/src/components/FolderName.js",["105","106","107","108"],"/Users/abhinav/Desktop/CS258-Main/src/components/Navbar.js",["109","110","111","112"],"import React, { useState, useContext, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { ThemeContext } from '../App'\nconst background = {\n    Dark: \"bg-gray-900 text-white\",\n    Light: \"bg-white text-gray-900\"\n}\nconst background2 = {\n    Light: \"bg-gray-900 text-white\",\n    Dark: \"bg-white text-gray-900\"\n}\nfunction Navbar() {\n\n    const { paths, setPaths } = useContext(ThemeContext)\n    const [buttonText, setButtonText] = useState('Light');\n    const clickHandler = () => {\n        if (paths[\"mode\"]==\"Light\") {\n            setPaths({...paths, [\"mode\"]: \"Dark\"})\n            setButtonText('Light')\n        } else {\n            setPaths({...paths, [\"mode\"]: \"Light\"})\n            setButtonText('Dark')\n        }\n    }\n    return (\n        // <div class={`sticky top-0 2xl:max-w-[1280px] pt-5 pb-3 w-full mx-auto flex justify-between gap-8 ${darkToggle ? \"dark\" : \"\"}`}>\n        <div className={`sticky top-0 2xl:max-w-[1280px] pt-5 pb-3 w-full mx-auto flex justify-between gap-8 ${background[paths[\"mode\"]]}`}>\n            <Link to='/'><button class={`border-2 border border-gray-300 focus:outline-none bg-gray-100 focus:ring-4 focus:ring-gray-200 font-medium rounded-lg text-sm px-6 py-2.5 mr-2 mb-2 dark:bg-black dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700 ${background2[paths[\"mode\"]]}`}>Back</button></Link>\n            <h2 className={`font-extrabold text-[24px] leading-[30px] ${background[paths[\"mode\"]]}`}>Visualizer</h2>\n            <button\n                onClick={clickHandler}\n                class={`border-2 border border-gray-300 focus:outline-none ${background2[paths[\"mode\"]]} focus:ring-4 focus:ring-gray-200 font-medium rounded-[100px] text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700`}\n            >\n                {buttonText}\n            </button>\n        </div>\n    )\n};\n\nexport default Navbar;","/Users/abhinav/Desktop/CS258-Main/src/components/TwoImg.js",[],"/Users/abhinav/Desktop/CS258-Main/src/components/Card.js",["113","114","115"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from 'react'\nimport Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport Typography from '@mui/material/Typography'\nimport Modal from '@mui/material/Modal'\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '80%',\n  height: '93%',\n  backgroundColor: 'transparent',\n  border: '1px',\n  borderRadius: '25px',\n  boxShadow: 24,\n  overflowY: 'scroll',\n  outline: 'none'\n}\n\nfunction Card(props) {\n  const [open, setOpen] = React.useState(false)\n  const handleOpen = () => setOpen(true)\n  const handleClose = () => setOpen(false)\n  return (\n    <a\n      href=\"#\"\n      class=\"block m-4 no-underline rounded-lg group relative border-4\"\n    >\n      <img\n        alt=\"Art\"\n        src={props.image}\n        class=\"h-64 w-full object-cover sm:h-80 lg:h-96 rounded-lg\"\n        onClick={handleOpen}\n      />\n      <div class=\"absolute top-0 left-0 w-full h-0 flex flex-col justify-center items-center bg-gray-700 opacity-0 duration-500\">\n        <Modal\n          style={{ outline: 'none' }}\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n          className=\"focus:outline-none\"\n        >\n          <Box sx={style}>\n            <div\n              style={{ outline: 'none' }}\n              className=\"w-[100%] container bg-gray-200 border-[16px] rounded-[25px] border-gray-600 py-5 px-5 overflow-y-scroll h-[100%] text-black\"\n            >\n              <h1 class=\"text-2xl text-center font-bold text-black sm:text-3xl\">\n                Image Path\n              </h1>\n              <h1 className=\"text-center\">{props.image.slice(8)}</h1>\n              <div className=\"flex justify-center items-center w-100 h-100\">\n                <img alt=\"Art\" src={props.image} className=\"object-contain\" />\n              </div>\n            </div>\n          </Box>\n        </Modal>\n      </div>\n    </a>\n  )\n}\n\nexport default Card\n","/Users/abhinav/Desktop/CS258-Main/src/components/ModalComp.js",[],"/Users/abhinav/Desktop/CS258-Main/src/components/MetricsName.js",["116"],"import React, { useState, useMemo, useContext } from 'react'\nimport Box from '@mui/material/Box'\nimport Modal from '@mui/material/Modal'\nimport { FilesViewer } from '../FilesViewer'\nimport { ThemeContext } from '../App'\n\nconst fs = window.require('fs')\nconst pathModule = window.require('path')\n\nconst { app } = window.require('@electron/remote')\n\nconst formatSize = size => {\n  var i = Math.floor(Math.log(size) / Math.log(1024))\n  return (\n    (size / Math.pow(1024, i)).toFixed(2) * 1 +\n    ' ' +\n    ['B', 'kB', 'MB', 'GB', 'TB'][i]\n  )\n}\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 550,\n  height: '60%',\n  backgroundColor: 'transparent',\n  border: '1px',\n  borderRadius: '25px',\n  boxShadow: 24,\n  overflowY: 'scroll'\n}\n\nfunction FolderName(props) {\n  const { paths, setPaths } = useContext(ThemeContext)\n  const [path, setPath] = useState(app.getAppPath())\n\n  const files = useMemo(\n    () =>\n      fs\n        .readdirSync(path)\n        .map(file => {\n          const stats = fs.statSync(pathModule.join(path, file))\n        //   console.log(pathModule.join(path, file))\n          return {\n            name: file,\n            size: stats.isFile() ? formatSize(stats.size ?? 0) : null,\n            directory: stats.isDirectory()\n          }\n        })\n        .sort((a, b) => {\n          if (a.directory === b.directory) {\n            return a.name.localeCompare(b.name)\n          }\n          return a.directory ? -1 : 1\n        }),\n    [path]\n  )\n\n  const onBack = () => {\n    setPath(pathModule.dirname(path))\n    setPaths({ ...paths, [props.folder]: pathModule.dirname(path) })\n  }\n  const onOpen = folder => {\n    setPath(pathModule.join(path, folder))\n    setPaths({ ...paths, [props.folder]: pathModule.join(path, folder) })\n    // console.log(paths[props.folder])\n  }\n  const onClickFile = folder => {\n    paths[props.folder]=pathModule.join(path, folder)\n    console.log(paths[props.folder])\n  }\n\n  const [searchString, setSearchString] = useState('')\n  const filteredFiles = files.filter(s => s.name.startsWith(searchString))\n  const [open, setOpen] = React.useState(false)\n  const handleOpen = () => setOpen(true)\n  const handleClose = () => setOpen(false)\n  \n\n  return (\n    <header>\n        <button\n            onClick={handleOpen}\n            class=\"block text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-emerald-500 dark:text-white dark:border-gray-300 dark:hover:bg-emerald-700 border-2  dark:focus:ring-gray-700\"\n            type=\"button\"\n        >\n            Metrics File\n        </button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        className=\"focus:outline-none\"\n      >\n        <Box sx={style}>\n          <div className=\"container bg-gray-200 border-[16px] rounded-[25px] border-gray-600 py-5 px-5 overflow-y-scroll h-[100%] text-black\">\n            <div className=\"pb-2 w-full mx-auto flex justify-between gap-8\" >\n              <h2 className=\"font-semibold text-[18px] leading-[30px] text-gray-900\">Browse Folders</h2>\n            </div>\n            <h4>{path}</h4>\n            <FilesViewer\n              files={filteredFiles}\n              onBack={onBack}\n              onOpen={onOpen}\n              onClickFile={onClickFile}\n            />\n          </div>\n        </Box>\n      </Modal>\n    </header>\n  )\n}\n\nexport default FolderName\n",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":20,"nodeType":"123","messageId":"124","endLine":1,"endColumn":27},{"ruleId":"121","severity":1,"message":"125","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":21},{"ruleId":"121","severity":1,"message":"126","line":9,"column":9,"nodeType":"123","messageId":"124","endLine":9,"endColumn":12},{"ruleId":"121","severity":1,"message":"127","line":7,"column":10,"nodeType":"123","messageId":"124","endLine":7,"endColumn":15},{"ruleId":"121","severity":1,"message":"128","line":17,"column":18,"nodeType":"123","messageId":"124","endLine":17,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":21,"column":46,"nodeType":"131","messageId":"132","endLine":21,"endColumn":48},{"ruleId":"129","severity":1,"message":"130","line":28,"column":46,"nodeType":"131","messageId":"132","endLine":28,"endColumn":48},{"ruleId":"129","severity":1,"message":"130","line":35,"column":46,"nodeType":"131","messageId":"132","endLine":35,"endColumn":48},{"ruleId":"133","severity":1,"message":"134","line":43,"column":24,"nodeType":"135","messageId":"136","endLine":43,"endColumn":26},{"ruleId":"133","severity":1,"message":"137","line":50,"column":24,"nodeType":"135","messageId":"136","endLine":50,"endColumn":26},{"ruleId":"121","severity":1,"message":"127","line":7,"column":10,"nodeType":"123","messageId":"124","endLine":7,"endColumn":15},{"ruleId":"121","severity":1,"message":"128","line":18,"column":18,"nodeType":"123","messageId":"124","endLine":18,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":23,"column":46,"nodeType":"131","messageId":"132","endLine":23,"endColumn":48},{"ruleId":"129","severity":1,"message":"130","line":31,"column":46,"nodeType":"131","messageId":"132","endLine":31,"endColumn":48},{"ruleId":"121","severity":1,"message":"138","line":37,"column":13,"nodeType":"123","messageId":"124","endLine":37,"endColumn":19},{"ruleId":"133","severity":1,"message":"134","line":46,"column":26,"nodeType":"135","messageId":"136","endLine":46,"endColumn":28},{"ruleId":"133","severity":1,"message":"137","line":53,"column":26,"nodeType":"135","messageId":"136","endLine":53,"endColumn":28},{"ruleId":"121","severity":1,"message":"139","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"140","line":1,"column":39,"nodeType":"123","messageId":"124","endLine":1,"endColumn":48},{"ruleId":"121","severity":1,"message":"128","line":10,"column":18,"nodeType":"123","messageId":"124","endLine":10,"endColumn":26},{"ruleId":"121","severity":1,"message":"141","line":11,"column":9,"nodeType":"123","messageId":"124","endLine":11,"endColumn":20},{"ruleId":"121","severity":1,"message":"127","line":7,"column":10,"nodeType":"123","messageId":"124","endLine":7,"endColumn":15},{"ruleId":"121","severity":1,"message":"128","line":17,"column":18,"nodeType":"123","messageId":"124","endLine":17,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":21,"column":46,"nodeType":"131","messageId":"132","endLine":21,"endColumn":48},{"ruleId":"129","severity":1,"message":"130","line":28,"column":46,"nodeType":"131","messageId":"132","endLine":28,"endColumn":48},{"ruleId":"129","severity":1,"message":"130","line":35,"column":46,"nodeType":"131","messageId":"132","endLine":35,"endColumn":48},{"ruleId":"129","severity":1,"message":"130","line":42,"column":46,"nodeType":"131","messageId":"132","endLine":42,"endColumn":48},{"ruleId":"133","severity":1,"message":"134","line":50,"column":24,"nodeType":"135","messageId":"136","endLine":50,"endColumn":26},{"ruleId":"133","severity":1,"message":"137","line":57,"column":24,"nodeType":"135","messageId":"136","endLine":57,"endColumn":26},{"ruleId":"121","severity":1,"message":"142","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":14},{"ruleId":"121","severity":1,"message":"143","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":18},{"ruleId":"121","severity":1,"message":"126","line":14,"column":9,"nodeType":"123","messageId":"124","endLine":14,"endColumn":12},{"ruleId":"121","severity":1,"message":"144","line":74,"column":24,"nodeType":"123","messageId":"124","endLine":74,"endColumn":39},{"ruleId":"121","severity":1,"message":"140","line":1,"column":39,"nodeType":"123","messageId":"124","endLine":1,"endColumn":48},{"ruleId":"133","severity":1,"message":"137","line":17,"column":26,"nodeType":"135","messageId":"136","endLine":17,"endColumn":28},{"ruleId":"145","severity":1,"message":"146","line":18,"column":33,"nodeType":"147","messageId":"148","endLine":18,"endColumn":49,"fix":"149"},{"ruleId":"145","severity":1,"message":"146","line":21,"column":33,"nodeType":"147","messageId":"148","endLine":21,"endColumn":50,"fix":"150"},{"ruleId":"121","severity":1,"message":"139","line":2,"column":17,"nodeType":"123","messageId":"124","endLine":2,"endColumn":25},{"ruleId":"121","severity":1,"message":"142","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":14},{"ruleId":"121","severity":1,"message":"143","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":18},{"ruleId":"121","severity":1,"message":"144","line":75,"column":24,"nodeType":"123","messageId":"124","endLine":75,"endColumn":39},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'FilesViewer' is defined but never used.","'app' is assigned a value but never used.","'spawn' is defined but never used.","'setPaths' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'reader' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'folderInput' is assigned a value but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'setSearchString' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"mode\"] found.","Property","unnecessarilyComputedProperty",{"range":"153","text":"154"},{"range":"155","text":"154"},"no-global-assign","no-unsafe-negation",[572,580],"\"mode\"",[675,683]]